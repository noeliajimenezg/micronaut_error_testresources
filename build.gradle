plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.4"
    id("io.micronaut.test-resources") version "4.3.4"
    id("io.micronaut.aot") version "4.3.4"
}

version = "0.1"
group = "com.example"

repositories {
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        mavenContent { snapshotsOnly() }
    }
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.oracle.database.jdbc:ojdbc11")
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("io.micronaut.testresources:micronaut-test-resources-extensions-core:2.4.0")
    testImplementation 'io.micronaut.testresources:micronaut-test-resources-extensions-junit-platform:2.4.0'
    testResourcesImplementation("io.micronaut.testresources:micronaut-test-resources-core:2.4.0")
    testResourcesImplementation("io.micronaut.testresources:micronaut-test-resources-server:2.4.0")
    testResourcesService("io.micronaut.testresources:micronaut-test-resources-jdbc-oracle-free:2.4.0")
    testRuntimeOnly("io.micronaut.testresources:micronaut-test-resources-client:2.4.0")
}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
    testResources {
        additionalModules.add("jdbc-oracle-free")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

tasks.named("dockerfile") {
    baseImage("eclipse-temurin:21-jre-jammy")
}

tasks.named("dockerfileNative") {
    jdkVersion = "21"
}


